{"version":3,"file":"ngx-restangular-helper.js","sourceRoot":"","sources":["../../../src/ngx-restangular-helper.ts"],"names":[],"mappings":";;AAAA,sCAAsF;AAEtF,4CAAyC;AAEzC,IAAA;;;IAES,sCAAoB,GAA3B,UAA4B,OAAO;QACjC,IAAI,kBAAkB,GAAG,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpF,IAAI,cAAc,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7E,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACjG,IAAI,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,KAAK,CAAC;QAEvD,IAAI,cAAc,GAAG,IAAI,qBAAc,CAAC;YACtC,MAAM,EAAE,oBAAa,CAAC,UAAU,CAAC;YACjC,OAAO,EAAE,cAAc;YACvB,MAAM,EAAE,kBAAkB;YAC1B,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,eAAe,iBAAA;SAChB,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC;KACvB;IAEM,0CAAwB,GAA/B,UAAgC,WAAW;QACzC,IAAI,kBAAkB,GAAG,eAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;QACjD,IAAI,MAAM,GAAoB,IAAI,sBAAe,EAAE,CAAC;gCAE3C,GAAG;YACV,IAAI,KAAK,GAAQ,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAEzC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,CAAC,OAAO,CAAC,UAAS,GAAG;oBACxB,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBACzB,CAAC,CAAC;aACJ;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC9B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBAC/B;gBACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC3B;;QAZH,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,kBAAkB,CAAC;oBAA1B,GAAG;SAcX;QAED,MAAM,CAAC,MAAM,CAAC;KACf;IAEM,sCAAoB,GAA3B,UAA4B,OAAO;QACjC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,IAAI,KAAK,GAAQ,OAAO,CAAC,GAAG,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;aACrB;SACF;QAED,MAAM,CAAC,IAAI,cAAO,CAAC,eAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;KACzC;4BAzDH;IA0DC,CAAA;AAtDY,8CAAiB","sourcesContent":["import {URLSearchParams, Headers, RequestOptions, RequestMethod} from '@angular/http';\r\n\r\nimport {assign} from 'core-js/fn/object';\r\n\r\nexport class RestangularHelper {\r\n  \r\n  static createRequestOptions(options) {\r\n    let requestQueryParams = RestangularHelper.createRequestQueryParams(options.params);\r\n    let requestHeaders = RestangularHelper.createRequestHeaders(options.headers);\r\n    let methodName = options.method.charAt(0).toUpperCase() + options.method.substr(1).toLowerCase();\r\n    let withCredentials = options.withCredentials || false;\r\n    \r\n    let requestOptions = new RequestOptions({\r\n      method: RequestMethod[methodName],\r\n      headers: requestHeaders,\r\n      search: requestQueryParams,\r\n      url: options.url,\r\n      body: options.data,\r\n      responseType: options.responseType,\r\n      withCredentials\r\n    });\r\n    \r\n    return requestOptions;\r\n  }\r\n  \r\n  static createRequestQueryParams(queryParams) {\r\n    let requestQueryParams = assign({}, queryParams);\r\n    let search: URLSearchParams = new URLSearchParams();\r\n    \r\n    for (let key in requestQueryParams) {\r\n      let value: any = requestQueryParams[key];\r\n\r\n      if (Array.isArray(value)) {\r\n        value.forEach(function(val){\r\n          search.append(key, val);\r\n        });\r\n      } else {\r\n        if (typeof value === 'object') {\r\n          value = JSON.stringify(value);\r\n        }\r\n        search.append(key, value);\r\n      }\r\n           \r\n    }\r\n    \r\n    return search;\r\n  }\r\n  \r\n  static createRequestHeaders(headers) {\r\n    for (let key in headers) {\r\n      let value: any = headers[key];\r\n      if (typeof value === 'undefined') {\r\n        delete headers[key];\r\n      }\r\n    }\r\n    \r\n    return new Headers(assign({}, headers));\r\n  }\r\n}\r\n"]}